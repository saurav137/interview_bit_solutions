
string find_next(string ans){
    int n=ans.size();
    int i=1;
    string next="";
  //  char c=ans[0];
    int count=1;
    if(n==1){
        return "11";
    }
    while(i<=n){
       if(i==n){
           
             next+=to_string(count);
             next+=ans[i-1];
          }
       else if( i<n && ans[i]==ans[i-1]){
           count++;
          }
       else{
           next+=to_string(count);
           next+=ans[i-1];
           count=1;
           
       }
       i++;
    }
    return next;
    
}
string Solution::countAndSay(int A) {
    if(A==1)
     return "1";
     else {
         int c=1;
        string ans="1";
        while(c<A){
            ans=find_next(ans);
            c++;
        }
        return ans;
     }
}
